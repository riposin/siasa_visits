.open visits.db

-- Tables --

CREATE TABLE preregistrations(
	guid BLOB(16) NOT NULL PRIMARY KEY,
	company_key NVARCHAR(20) NOT NULL,
	full_name NVARCHAR(100) NOT NULL,
	email NVARCHAR(100) NOT NULL,
	visit_date DATETIME NOT NULL,
	motive NVARCHAR(150) NOT NULL,
	created_at DATETIME NOT NULL,
	confirmed_at DATETIME
);

CREATE TABLE preregistrations_settings(
	id INTEGER PRIMARY KEY,
	link_expiration_hours SMALLINT NOT NULL,
	link_url_format NVARCHAR(200) NOT NULL,
	email_subject NVARCHAR(100),
	email_body_format NVARCHAR(700) NOT NULL,
	email_date_time_format NVARCHAR(50) NOT NULL,
	smtp_host NVARCHAR(50) NOT NULL,
	smtp_port SMALLINT NOT NULL,
	smtp_user NVARCHAR(50) NOT NULL,
	smtp_password NVARCHAR(100) NOT NULL
);


-- Default Data --

INSERT INTO preregistrations_settings VALUES(NULL, 0, '', '','', '', '', 0, '', '');

UPDATE preregistrations_settings SET link_expiration_hours = 	24;
UPDATE preregistrations_settings SET link_url_format = 			'https://SETHOSTHERE/Confirmation/Show/{0}';
UPDATE preregistrations_settings SET email_subject = 			'Solicitud de confirmacion de Visita';
UPDATE preregistrations_settings SET email_body_format = 		'<p>Clave de empresa: <span style="font-weight: bold;">{0}</span><br/>Nombre completo: <span style="font-weight: bold;">{1}</span><br/>Fecha y hora: <span style="font-weight: bold;">{2}</span><br/>Motivo: <span style="font-weight: bold;">{3}</span><br/><a href="{4}">Confirmar el pre-registro</a><br/><br/><span style="font-weight: bold;"><a href="{4}">{4}</a></span></p>';
UPDATE preregistrations_settings SET email_date_time_format = 	'dd/MM/yyyy hh:mm tt';
UPDATE preregistrations_settings SET smtp_host = 				'smtp.gmail.com';
UPDATE preregistrations_settings SET smtp_port = 				'587';
UPDATE preregistrations_settings SET smtp_user = 				'cortana@gmail.com';
UPDATE preregistrations_settings SET smtp_password = 			'spartan117';


-- Triggers --

CREATE TRIGGER setEmptyToNullConfirmDate
         AFTER INSERT
            ON preregistrations
          WHEN trim(new.confirmed_at) IS ''
BEGIN
    UPDATE preregistrations
       SET confirmed_at = NULL
     WHERE rowid = NEW.rowid;
END;

CREATE TRIGGER changeEmptyToNullConfirmDate
         AFTER UPDATE
            ON preregistrations
          WHEN trim(new.confirmed_at) IS ''
BEGIN
    UPDATE preregistrations
       SET confirmed_at = NULL
     WHERE rowid = NEW.rowid;
END;

.quit
